name: C workfloww
on: [push, pull_request]
permissions:
  contents: write

jobs:
  MainSequence:
    name: Code Formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
      - name: requirements
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install clang-tidy clang-format
      - name: Setup Git Specs
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 'github-actions@users.noreply.github.com'      - name: Get file changes
        run: |
          git branch
          git diff --diff-filter=dr --name-only origin/main > git_diff.txt
          echo "Files changed-- `cat git_diff.txt`"
      - name: Configure for static lint checks
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: Lint modified files
        shell: python
        run: |
          import os
          import subprocess
          import sys
          print("Python {}.{}.{}".format(*sys.version_info))  # Python 3.8
          with open("git_diff.txt") as in_file:
            modified_files = sorted(in_file.read().splitlines())
          print("{} files were modified.".format(len(modified_files)))
          cpp_exts = tuple(".c .c++ .cc .cpp .cu .cuh .cxx .h .h++ .hh .hpp .hxx".split())
          cpp_files = [file for file in modified_files if file.lower().endswith(cpp_exts)]
          print(f"{len(cpp_files)} C++ files were modified.")
          if not cpp_files:
            sys.exit(0)
            subprocess.run(["clang-tidy", "-p=build", "--fix", *cpp_files, "--"],
                check=True, text=True, stderr=subprocess.STDOUT)
            subprocess.run(["clang-format", "-i", *cpp_files],
                check=True, text=True, stderr=subprocess.STDOUT)
          upper_files = [file for file in cpp_files if file != file.lower()]
          if upper_files:
            print(f"{len(upper_files)} files contain uppercase characters:")
            print("\n".join(upper_files) + "\n")
          space_files = [file for file in cpp_files if " " in file or "-" in file]
          if space_files:
            print(f"{len(space_files)} files contain space or dash characters:")
            print("\n".join(space_files) + "\n")
      - name: Commit and push changes
        run: |
          git commit -am "clang-format and clang-tidy fixes for ${GITHUB_SHA::8}" || true
          git push origin HEAD:$GITHUB_REF || true
  build:
    name: Compile checks
    runs-on: ${{ matrix.os }}
    needs: [MainSequence]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: cmake -B ./build -S .
      - run: cmake --build build
